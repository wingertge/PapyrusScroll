package org.genguava.papyrusscroll.psi

import com.intellij.psi.PsiElementVisitor

open class PapyrusElementVisitor : PsiElementVisitor() {
    open fun visitPapElement(node: PapyrusElement) = visitElement(node)
    fun visitPapReferenceExpression(node: PapyrusReferenceExpression) = visitPapExpression(node)
    fun visitPapTargetExpression(node: PapyrusTargetExpression) = visitPapExpression(node)
    fun visitPapCallExpression(node: PapyrusCallExpression) = visitPapExpression(node)
    fun visitPapDecoratorList(node: PapyrusDecoratorList) = visitElement(node)
    fun visitPapBinaryExpression(node: PapyrusBinaryExpression) = visitPapExpression(node)
    fun visitPapPRefixExpression(node: PapyrusPrefixExpression) = visitPapExpression(node)
    fun visitPapSequenceExpression(node: PapyrusSequenceExpression) = visitPapExpression(node)
    fun visitPapParenthesizedExpression(node: PapyrusParenthesizedExpression) = visitPapExpression(node)
    fun visitPapAssignmentStatement(node: PapyrusAssignmentStatement) = visitPapStatement(node)
    fun visitPapAugAssignmentStatement(node: PapyrusAugAssignmentStatement) = visitPapStatement(node)
    fun visitPapReturnStatement(node: PapyrusReturnStatement) = visitPapStatement(node)
    fun visitPapIfStatement(node: PapyrusIfStatement) = visitPapStatement(node)
    fun visitPapWhileStatement(node: PapyrusWhileStatement) = visitPapStatement(node)
    fun visitPapExpressionStatement(node: PapyrusExpressionStatement) = visitPapStatement(node)
    fun visitPapStatement(node: PapyrusStatement) = visitPapElement(node)
    fun visitPapExpression(node: PapyrusExpression) = visitPapElement(node)
    fun visitPapParameterList(node: PapyrusParameterList) = visitPapElement(node)
    fun visitPapParameter(node: PapyrusParameter) = visitPapElement(node)
    fun visitPapNamedParameter(node: PapyrusNamedParameter) = visitPapParameter(node)
    fun visitPapArgumentList(node: PapyrusArgumentList) = visitPapElement(node)
    fun visitPapStatementList(node: PapyrusStatementList) = visitPapElement(node)
    open fun visitPapFunction(node: PapyrusFunction) = visitPapElement(node)
    open fun visitPapClass(node: PapyrusClass) = visitPapElement(node)
    fun visitPapFile(node: PapyrusFile) = visitPapElement(node)
    fun visitPapStringLiteralExpression(node: PapyrusStringLiteralExpression) = visitPapElement(node)
    fun visitPapNumericLiteralExpression(node: PapyrusNumericLiteralExpression) = visitPapElement(node)
    fun visitPapImportStatement(node: PapyrusImportStatement) = visitPapStatement(node)
    fun visitPapImportElement(node: PapyrusImportElement) = visitPapElement(node)
    fun visitPapConditionalStatementPart(node: PapyrusConditionalStatementPart) = visitPapElement(node)
    fun visitPapNullLiteralExpression(node: PapyrusNullLiteralExpression) = visitPapElement(node)
    fun visitPapBoolLiteralExpression(node: PapyrusBoolLiteralExpression) = visitPapElement(node)
    fun visitPapConditionalExpression(node: PapyrusConditionalExpression) = visitPapElement(node)
    fun visitPapTypeDeclarationStatement(node: PapyrusTypeDeclarationStatement) = visitPapStatement(node)
}